#create a database called 'my_first_db'.
mongo
use my_first_db

#Create students collection.
db.createCollection("students")

#Each document you insert into this collection should have the following format: 
({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})

# Create 5 students with the appropriate udents.insert({name: "Student1", home_state: "IL", lucky_number: 8, birthday: {month: 05, date: 15, year: 1990}})
db.students.insert({name: "Student1", home_state: "CA", lucky_number: 8, birthday: {month: 03, date: 03, year: 2003}})
db.students.insert({name: "Student2", home_state: "AL", lucky_number: 15, birthday: {month: 15, date: 01, year: 1930}})
db.students.insert({name: "Student3", home_state: "WA", lucky_number: 777, birthday: {month: 03, date: 22, year: 1967}})
db.students.insert({name: "Student4", home_state: "NY", lucky_number: 666, birthday: {month: 06, date: 15, year: 1965}})
db.students.insert({name: "Student5", home_state: "AZ", lucky_number: 1, birthday: {month: 03, date: 03, year: 2003}})


# Get all students.
db.students.find().pretty()

# Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).
db.students.find({home_state: "WA"})

# Get all students whose lucky number is greater than 3
db.students.find({lucky_number: {$gt: 3}})

# Get all students whose lucky number is less than or equal to 10
db.students.find({lucky_number: {$lte: 10}})

# Get all students whose lucky number is between 1 and 9 (inclusive)
db.studentes.find( { lucky_number: { $in: [ 1, 9 ] } } )

# Add a field to each student collection called 'interests' that is an ARRAY. It should contain the following entries: 'coding', 'brunch', 'MongoDB'. Do this in ONE operation.
db.students.updateMany({}, {$set: {interests: ['coding', 'brunch', 'MongoDB']}})

# Add some unique interests for each particular student into each of their interest arrays.
db.students.update({_id: ObjectId("3e83e8f9e7e596549f327d8a")}, {$addToSet: {interests: 'hobby1'}})
db.students.update({_id: ObjectId("3e83e7e9e7e596549f327d8b")}, {$addToSet: {interests: 'hobby2'}})
db.students.update({_id: ObjectId("3e83e7e9e7e596549f327d8c")}, {$addToSet: {interests: 'hobby3'}})
db.students.update({_id: ObjectId("3e83e7c8e7e596549f327d8d")}, {$addToSet: {interests: 'hobby4'}})
db.students.update({_id: ObjectId("3e83e7c8e7e596549f327d8e")}, {$addToSet: {interests: 'hobby5'}})

# Add the interest 'taxes' into someone's interest array.
db.students.update({_id: ObjectId("3e83e7c8e7e596549f327d8e")}, {$addToSet: {interests: 'taxes'}})

# Remove the 'taxes' interest you just added.
db.students.update({_id: ObjectId("3e83e7c8e7e596549f327d8e")}, {$pull: {interests: 'taxes'}})

# Remove all students who are from California.
db.students.remove({home_state: 'CA'})

# Remove a student by name.
db.students.remove({name: 'Student1'})

# Remove a student whose lucky number is greater than 5 (JUST ONE)
db.students.remove({lucky_number: 5}, true)

# Add a field to each student collection called 'number_of_belts' and set it to 0.
db.students.updateMany({{$addToSet: {number_of_belts: '0'}})

# Increment this field by 1 for all students in Washington (Seattle Dojo).
db.students.updateMany({home_state: "WA"}, {$inc: {number_of_belts: 1}})

# Rename the 'number_of_belts' field to 'belts_earned'
> db.students.updateMany({}, {$rename: {'number_of_belts': 'belts_earned'}})

# Remove the 'lucky_number' field.
db.students.updateMany({}, {$unset: {lucky_number: ''}})

# Add a 'updated_on' field, and set the value as the current date
> db.students.updateMany({}, {$currentDate: {updated_on: true}})

